[[source]]
url = "https://pypi.python.org/simple"
verify_ssl = true
name = "pypi"

[packages]
asyncio = "*"
aiogram = "==3.0.0b7"
notion-client = "==0.9.0"
python-dotenv = "*"
gTTS = "*"
wikipedia = "*"
beautifulsoup4 = "*"
translate = "*"
youtube-search = "*"
tortoise-orm = "*"
docx2txt = "*"
varname = "*"
tiktok-downloader = {git = "https://github.com/krypton-byte/tiktok-downloader"}
yt-dlp = "*"
pytube = "*"

[dev-packages]
autopep8 = "*"
flake8 = "*"
pytest = "*"
pytest-cov = "*"
pytest-asyncio = "*"
mypy = "*"
pip = "*"
pytest-tornasync = "*"
types-requests = "*"
pre-commit = "*"

[requires]
python_version = "3.11"

[scripts]
bot = "sh -c 'python bot/main.py'"
dev = "nodemon -e py -x pipenv run bot"
test = "pytest"
prod = "sh -c 'nohup pipenv run bot &'"
gitup = "sh -c 'git fetch && git pull'"
lock = "sh -c 'pipenv -q requirements > requirements.txt'"
lock-dev = "sh -c 'pipenv -q requirements --dev > requirements-dev.txt'"
api = "sh -c 'docker compose -f services/bot-api/docker-compose.yml up -d'"
api-ip = "sh scripts/get_bot_api_ip.sh"
dbuild = "sh -c 'pipenv -q run lock && docker compose build'"
dstop = "sh -c 'docker compose stop && docker compose rm -f'"
drun = "sh -c 'pipenv -q run dbuild && docker compose up -d'"
drestart = "sh -c 'pipenv -q run dstop && pipenv -q run drun'"
